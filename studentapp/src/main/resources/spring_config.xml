<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--扫描spring的注解包-->
    <context:component-scan base-package="web.gsj.modules.Services,web.gsj.modules.Controllers"/>
    <!--读取连接数据库的配置文件db.properties-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--声明数据源-->
    <bean id="dataSource" class= "com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--mybatis配置，此时，可以不需要mybatis_config.xml-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:web/gsj/modules/Mapper/*Mapper.xml"/>
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
    </bean>

    <!--扫描mybatis定义的mapper类 扫描到后会向spring容器中注册mapper类对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="web.gsj.modules.Mapper"/>
    </bean>
</beans>
